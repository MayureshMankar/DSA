import java.util.Scanner;  // Import Scanner class to take user input

public class Main {

    // Method to add two numbers and return the result
    public static int addTwoNumber(int num1, int num2) {
        int sum = num1 + num2;           // Add the two numbers
        return sum;                      // Return the result
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);  // Create Scanner object to read input

        System.out.print("Enter a number: ");
        int num1 = scanner.nextInt();              // Read first number from user

        System.out.print("Enter a number: ");
        int num2 = scanner.nextInt();              // Read second number from user

        int sum = addTwoNumber(num1, num2);        // Call the method and store the result
        System.out.println("Total sum = " + sum);  // Display the result

        scanner.close();                           // Close the scanner to prevent memory leak
    }
}






//second example

public class Main {

    // ðŸ”¹ Pass by Value (Primitive Type)
    public static void changePrimitive(int x) {
        x = 100;  // Only local copy changes
        System.out.println("Inside changePrimitive: x = " + x);
    }

    // ðŸ”¹ Pass by Reference (Reference Type - Array)
    public static void changeArray(int[] arr) {
        arr[0] = 99;  // Modifies original array
        System.out.println("Inside changeArray: arr[0] = " + arr[0]);
    }

    public static void main(String[] args) {
        // Pass by value demo
        int num = 50;
        System.out.println("Before changePrimitive: num = " + num);
        changePrimitive(num);
        System.out.println("After changePrimitive: num = " + num);  // Unchanged

        System.out.println();

        // Pass by reference demo
        int[] myArray = {1, 2, 3};
        System.out.println("Before changeArray: myArray[0] = " + myArray[0]);
        changeArray(myArray);
        System.out.println("After changeArray: myArray[0] = " + myArray[0]);  // Changed
    }
}

